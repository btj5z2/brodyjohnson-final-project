---
title: "Parameters associated with Injuries in the NFL"
subtitle: ""
author: Brody Johnson
date: "`r Sys.Date()`"
format:
  docx:
    toc: false
    number-sections: true
    highlight-style: github
bibliography: ../../assets/dataanalysis-references.bib
csl: ../../assets/apa.csl
---


```{r, echo=FALSE, message=FALSE}
# load a few R packages
library(here)
library(knitr)
library(dplyr)
library(tidyverse)
library(ggplot2)
```



# Summary/Abstract

The goal of this project will be to find variables related to injuries observed in the NFL. That is, find the common play types, game situation (time remaining, down, yards to go, etc.), and injured player metrics (position, height, body weight, etc.) that has a correlation to causing the resulting injury.

{{< pagebreak >}}


# Introduction 

## General Background Information

Over the past three decades, the NFL has come under increased scrutiny over the dangers of American football (@frontline-nfl-concussion). What initially began as concerns over the persistent brutality central to the sport, shifted into the more insidious issue of concussions and their role in the post-mortem diagnosis of Chronic Traumatic Encephalitic (CTE) (@mayoclinic-cte). The NFL has been making changes in the game in an attempt to prevent player injuries from rule modifications to investment in advancements to the players pads and helmets. Hopefully, the findings from this project can help inform players, coaches, and who knows, the NFL about the metrics for a higher risk in injury.

## Description of data and data source

Three data sets have been identified for this project. The primary data set ("Injury Player Data" contains 1,586 observations) consists of every play ran in the NFL containing an injury during the 2019-2020 season. Some of the things contained in this data include the teams playing, the week in the season, play description, injury area, and injured player metrics. The next is a "cumulative play data" containing information about every play ran in the 2019-2020 NFL season (42,186 observations). Information such as the teams playing, play description, and time in the game when it was ran. The last data set is the "player demographic data" containing information about all NFL players in the 2016-2019 seasons (11,145 observations). This data set has player metrics such as height, weight, date of birth, etc.


## Questions/Hypotheses to be addressed

My hope is to answer the following question: What metrics, if any, are available that can help predict whether an injury may occur? In turn, this has the potential to answer more questions. For example: 1. For coaches, are there specific play types that lead to more injuries? 2. For players, is there a goal weight for certain positions that can reduce the likelihood of injury?




{{< pagebreak >}}


# Methods 

The primary idea behind the analysis for this project is to look at various parameters when an injury occurred and compare them to the rest of the NFL. If the parameters are related to the play itself, the parameter in the injury data set will be compared to cumulative play data set. Likewise, if the parameter is related to the injured player themselves, this parameter will be compared to the cumulative player data set. If there is a statistical difference between parameters, we can likely draw some conclusion about a parameter causing injuries. 

With this being said, it is imperative to ensure parameters from both data sets are in the same format in order to compare them. Other data cleaning items will include vetting the data sets for unexpected/missing values and converting variables to another variable that easier to use. For example, the play descriptions in the injury data set and cumulative play data set are very extensive in what happened during the play. Therefore, this will be boiled down to be either a run play, short pass, etc.  


## Data aquisition
The "Injury Player Data" set was found from a Github repository. The repository belongs to a group of students who wanted to do a similar analysis looking at NFL injuries and various factors that could affect them. 

https://github.com/sammieerne/NFL-Injury-Analysis/tree/main/Data

The "cumulative play data" set comes from a website called NFLsavant.com. This website is dedicated to providing NFL statistics to the public. 

https://nflsavant.com/about.php

Lastly, the "player demographic data" set was also taken from a Github repository. Similar to the other repository, this one belongs to a group who wanted to analyze injuries in the NFL. 

https://github.com/ericcrouse/NFL-Injury-Exploration/tree/main/data/raw


## Data import and cleaning
In both the "Injury Player Data" set and "cumulative play data" set, the play descriptions will need to be boiled down to simplified play types (pass, run, fumble, etc.). Next for the "Injury Player Data" set, the "injury_area" parameter will be summarized as upper and lower body injuries. This is due to the overwhelming number of injuries being classified as one or the other already so this will classify the remaining injuries as such. For the injury data set and the "player demographic data", player ages will need to be calculated from their birth-dates.  

As for the "cumulative play data" set, empty columns will be removed and 0's in the down column will be converted to "NA" values which indicate kickoffs & PATs. Lastly, a lot of unnecessary plays are included in the "cumulative play data" set such as end of quarter/games, 2-minute warnings, and timeouts so these observations can be filtered out. 

In the "player demographic data" set, observations for players height were recorded in both inches and feet-inches so this was cleaned to only contain data in inches. Lastly, the players position was converted to a factor for analysis.

```{r}
#Loading the processed Data Sets
#Raw data files were cleaned in the processingcode.R (../../code/processing-code/) then saved as .rds file in the processed-data folder

# Injury Player Data
injuries=readRDS("../../data/processed-data/injuriesprocesseddata.rds") 

# Cumulative Play data
pbp=readRDS("../../data/processed-data/pbpprocesseddata.rds") 

#Player Demographic data
players=readRDS("../../data/processed-data/playersprocesseddata.rds") 
```


## Statistical analysis
First, I will select variables that show a potential difference between the injury data set and cumulative data sets through exploratory analysis. From these variables, I will run inferential tests for the numeric variables and a Chi-square test for the categorical variables. 

{{< pagebreak >}}


# Results

## Exploratory/Descriptive analysis

### Structures of each data set

```{r}
#Structure of Injury Data Set
glimpse(injuries)
```

```{r}
#Structure of Play-by-Play Data
glimpse(pbp)
```

```{r}
#Structure of All Players Data Set
glimpse(players)
```


### Exploratory Analysis of parameters only in the *Injury* Data Set

Looking at the number of injuries each week in the regular season, there's a sharp drop after the first week, steadily climbs nearing the end of the season, and another drop at the end of the season. Intuitively, this makes sense in that players may not be physically readily for the intensity of a regular-season game despite training camps and preseason games. After that, the slight rise in the second half of the season could be due to exhaustion through a long season and/or teams fighting more for playoff spots. Lastly, the steep drop in the last week is likely due to teams knowing whether or not they have made playoffs and therefore, do not want to incur an injury to go into either the post-season or off-season.  
```{r}
hist(injuries$week.x, breaks=21,main="Injuries by Week in Regular Season", xlim=c(1,17),ylim=c(0,200),xlab="Week",labels =T)
```

Below depicts the number of injuries for each reported injury area. The top results were simply reported as upper or lower body.

```{r}
injarea_freq=injuries %>%  group_by(injury.area) %>% summarize(count=n()) 
ggplot(data = injarea_freq, aes(x = reorder(injury.area, -count), y = count))+
  geom_col() +
  labs(x = "Injury Area", y="# of Injuries") + 
  theme(axis.text.x = element_text(angle=45, hjust = 1))

```

Below is a plot of the number of injuries by injury area but the injury areas were summarized to either be upper/lower body or head injuries. I kept head injuries separate due to the interest around concussions in football and see how they stack up against all other injuries. 

```{r}
injareanew_freq=injuries %>%  group_by(injury.area.new) %>% summarize(count=n()) 
ggplot(data = injareanew_freq, aes(x = reorder(injury.area.new, -count), y = count))+
  geom_col() +
  labs(x = "Injury Area", y="# of Injuries") + 
  theme(axis.text.x = element_text(angle=45, hjust = 1))
```

Out of curiosity, I plotted below the frequency of injuries for each team during the regular season. I was not expecting much but it is interesting to see about a triple in number of injuries from the lowest team (LA Rams) and the highest (LA Chargers). 

```{r}
team_freq=injuries %>%  filter(week.x<18) %>% group_by(team) %>% summarize(count=n()) #filtered to only contain regular season games (weeks 1-17)
ggplot(data = team_freq, aes(x = reorder(team, -count), y = count))+
  geom_col() +
  labs(x = "Team", y="# of Injuries") + 
  theme(axis.text.x = element_text(angle=45, hjust = 1))
```


### Exploratory Analysis of parameters in the *Injury* Data Set and *Play-by-play* Data Set

The number of plays seem evenly distributed among the halves (slight increase in 2nd and 4th quarters likely due to running last minute plays). However, the number of injuries consistently increase throughout the game which also makes sense as players fatigue.  

```{r}
ggplot(injuries, aes(x = qtr)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Injuries by Quarter", x = "Quarter", y = "Frequency")
```
```{r}
ggplot(pbp, aes(x = Quarter)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Total Plays by Quarter", x = "Quarter", y = "Frequency")
```


There appears to be a very similar trend among the number of plays per down and the number of injuries ocurring during each down. That is, they both decrease at similar rates.  

```{r}
ggplot(injuries, aes(x = down)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Injuries by Down", x = "Down", y = "Frequency")
```

```{r}
ggplot(pbp, aes(x = Down)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Total Plays by Down", x = "Down", y = "Frequency")
```


Below are two histograms depicting first the number of injuries and then second the total # of plays by different play types. After a glance, there does not appear to be a significant difference in number of injuries and total # of plays ran by play type. 

```{r}
play_type_freq=injuries %>%  group_by(play_type) %>% summarize(count=n()) 
ggplot(data = play_type_freq, aes(x = reorder(play_type, -count), y = count))+
  geom_col() +
  labs(x = "Play Type", y="# of Injuries") + 
  theme(axis.text.x = element_text(angle=45, hjust = 1))

```


```{r}
play_type_freq2=pbp %>%  group_by(play_type) %>% summarize(count=n()) 
ggplot(data = play_type_freq2, aes(x = reorder(play_type, -count), y = count))+
  geom_col() +
  labs(x = "Play Type", y="Total # of Plays") + 
  theme(axis.text.x = element_text(angle=45, hjust = 1))

```

### Exploratory Analysis of parameters in the *Injury* Data Set and *Cumulative Player* Data Set

Below are the distributions of players height first of the injured players and then from the cumulative player data set. Both histograms appear to be normally distributed. One interesting difference is the injured players appear to have more players just below and above the center of the histogram. That is, it would almost suggest players specifically under and above the mean height have a higher inclination for injury. 

```{r}
ggplot(injuries, aes(x = height)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Injuries by Height", x = "Height", y = "Frequency")
```
```{r}
ggplot(players, aes(x = height)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Total Players by Height", x = "Height", y = "Frequency")
```

Below are the histograms depicting the players height. They are both skewed to the right with one interesting finding of a peak of injured players in the ~300lb range. 

```{r}
ggplot(injuries, aes(x = weight)) +
  geom_histogram(binwidth = 10, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Injuries by Weight", x = "Weight", y = "Frequency")
```

```{r}
ggplot(players, aes(x = weight)) +
  geom_histogram(binwidth = 10, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Total Players by Weight", x = "Weight", y = "Frequency")
```

Both distributions of players age are below and have a similar skewness to the right. 

```{r}
ggplot(injuries, aes(x = age)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Injuries by Age", x = "Age", y = "Frequency")
```

```{r}
ggplot(players, aes(x = age)) +
  geom_histogram(binwidth = 1, fill = "lightgray", color = "black", alpha = 1) +
  labs(title = "Total Players by Age", x = "Age", y = "Frequency")
```

The primary finding from the player positions is that it appears the linemen (defensive and ofensive) are injured more often relative to how many there are in the league.  

```{r}
position_freq=injuries %>%  group_by(position) %>% summarize(count=n()) 
ggplot(data = position_freq, aes(x = reorder(position, -count), y = count))+
  geom_col() +
  labs(x = "Player Position", y="# of Injuries") + 
  theme(axis.text.x = element_text(angle=45, hjust = 1))

```

```{r}
position_freq2=players %>%  group_by(position) %>% summarize(count=n()) 
ggplot(data = position_freq2, aes(x = reorder(position, -count), y = count))+
  geom_col() +
  labs(x = "Player Position", y="Total # of Players") + 
  theme(axis.text.x = element_text(angle=45, hjust = 1))

```


## Basic statistical analysis

From the exploratory analysis, it appears there three numeric variables that may show a difference and one categorical. The three numeric variables are quarter, height, and weight while the single categorical variable is player position. 

```{r}
#Inferential test looking at Quarter
shapiro.test(injuries$qtr) #p-value<0.05. Reject Ho & don't assume normal.
shapiro.test(sample(pbp$Quarter, size=5000, replace=F)) #p-value<0.05. Reject Ho & don't assume normal.
#Will do Wilcoxon rank-sum test b/c of non-normal data 

wilcox.test(injuries$qtr, pbp$Quarter, exact=F) #p-value<0.05. Reject Ho and therefore, one group tends to have larger values than the other 

```

```{r}
#Inferential test looking at Height
shapiro.test(injuries$height) #p-value<0.05. Reject Ho & don't assume normal.
shapiro.test(players$height) #p-value<0.05. Reject Ho & don't assume normal.
#Will do Wilcoxon rank-sum test b/c of non-normal data 

wilcox.test(injuries$height, players$height, exact=F) #p-value<0.05. Reject Ho and therefore, one group tends to have larger values than the other 

```

```{r}
#Inferential test looking at Weight
shapiro.test(injuries$weight) #p-value<0.05. Reject Ho & don't assume normal.
shapiro.test(players$weight) #p-value<0.05. Reject Ho & don't assume normal.
#Will do Wilcoxon rank-sum test b/c of non-normal data 

wilcox.test(injuries$weight, players$weight, exact=F) #p-value<0.05. Reject Ho and therefore, one group tends to have larger values than the other 

```
```{r}
#Chi-square test looking at player position
factor_levels = levels(injuries$position)
chisq.test(sample(injuries$position, size=1303, replace=F), players$position) #p-value>0.05. Accept Ho and therefore, the two data sets have equal proportions among the player positions 

```

## Full analysis

_Use one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here._

Example @tbl-resulttable2 shows a summary of a linear model fit.

```{r}
#| label: tbl-resulttable2
#| tbl-cap: "Linear model fit table."
#| echo: FALSE
resulttable2 = readRDS(here("results","tables","resulttable2.rds"))
knitr::kable(resulttable2)
```


{{< pagebreak >}}


# Discussion

## Summary and Interpretation
_Summarize what you did, what you found and what it means._

## Strengths and Limitations
_Discuss what you perceive as strengths and limitations of your analysis._

## Conclusions
_What are the main take-home messages?_



{{< pagebreak >}}

# References



