---
title: "Parameters associated with Injuries in the NFL"
subtitle: ""
author: Brody Johnson
date: "`r Sys.Date()`"
format:
  docx:
    toc: false
    number-sections: true
    highlight-style: github
bibliography: ../../assets/dataanalysis-references.bib
csl: ../../assets/apa.csl
---

The structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. 
You don't need to have exactly these sections, but the content covering those sections should be addressed.

This uses MS Word as output format. [See here](https://quarto.org/docs/output-formats/ms-word.html) for more information. You can switch to other formats, like html or pdf. See [the Quarto documentation](https://quarto.org/) for other formats.


```{r, echo=FALSE, message=FALSE}
# load a few R packages
library(here)
library(knitr)
```



# Summary/Abstract

The goal of this project will be to find variables related to injuries observed in the NFL. That is, find the common play types, game situation (time remaining, down, yards to go, etc.), and injured player metrics (position, height, body weight, etc.) that has a correlation to causing the resulting injury.

{{< pagebreak >}}


# Introduction 

## General Background Information

For years, the NFL has been making changes in the game in an attempt to prevent player injuries. These changes range from rule modifications to investment in advancements to the players pads and helmets. Hopefully, the findings from this project can help inform players, coaches, and who knows, the NFL about the metrics for a higher risk in injury.

## Description of data and data source

Three data sets have been identified for this project. The primary data set ("Injury Player Data" obtained from a Github repository contain 1,586 observations) consists of every play ran in the NFL containing an injury during the 2019-2020 season. Some of the things contained in this data include the teams playing, the week in the season, play description, injury area, and injured player metrics. Two other data sets were obtained from Kaggle. The first is a "cumulative play data" containing information about every play ran in the 2019-2020 NFL season (42,186 observations). Information such as the teams playing, play description, and time in the game when it was ran. The last data set is the "player demographic data" containing information about all NFL players in the 2015-2019 seasons (11,145 observations). This data set has player metrics such as height, weight, date of birth, etc.


## Questions/Hypotheses to be addressed

My hope is to answer the following question: What metrics, if any, are available that can help predict whether an injury may occur? In turn, this has the potential to answer more questions. For example: 1. For coaches, are there specific play types that lead to more injuries? 2. For players, is there a goal weight for certain positions that can reduce the likelihood of injury?

To cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above and have the right bibtex key. Then you can include like this:

Examples of reproducible research projects can for instance be found in [@mckay2020; @mckay2020a].



{{< pagebreak >}}


# Methods 

_Describe your methods. That should describe the data, the cleaning processes, and the analysis approaches. You might want to provide a shorter description here and all the details in the supplement._

In both the "Injury Player Data" set and "cumulative play data" set, the play descriptions will need to be boiled down to simplified play types (pass, run, fumble, etc.). Next, a lot of what looks like unnecessary plays are included in the "cumulative play data" set such as end of quarters and games so these observations can be filtered out. Lastly, empty columns were noticed in the "cumulative play data" that can be removed.


## Schematic of workflow

Sometimes you might want to show a schematic diagram/figure that was not created with code (if you can do it with code, do it). @fig-schematic is an example of some - completely random/unrelated - schematic that was generated with Biorender.
We store those figures in the `assets` folder.

```{r}
#| label: fig-schematic
#| fig-cap: "A figure that is manually generated and shows some overview/schematic. This has nothing to do with the data, it's just a random one from one of our projects I found and placed here."
#| echo: FALSE
knitr::include_graphics(here("assets","antigen-recognition.png"))
```




## Data aquisition
_As applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next._


## Data import and cleaning
_Write code that reads in the file and cleans it so it's ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along._

```{r}
#Loading the Data Sets
#install.packages("RCurl")
#library(RCurl)

# Injury Player Data
#injuries <- read.csv(text = getURL("https://raw.githubusercontent.com/btj5z2/BrodyJohnson-P2-portfolio/main/position_injury_player_2019_2020_update.csv")) #also works but not needed
injuries=read.csv("../../data/raw-data/position_injury_player_2019_2020_update.csv")

# Cumulative Play data
#pbp <- read.csv(text = getURL("https://raw.githubusercontent.com/btj5z2/BrodyJohnson-P2-portfolio/main/pbp-2019.csv")) #short for play-by-play #also works but not needed
pbp = read.csv("../../data/raw-data/pbp-2019.csv")

#Player Demographic data
#players <- read.csv(text = getURL("https://raw.githubusercontent.com/btj5z2/BrodyJohnson-P2-portfolio/main/player_position_Rmd1.csv"))
players = read.csv("../../data/raw-data/players (1).csv")

```


## Statistical analysis
_Explain anything related to your statistical analyses._
The big picture look at the analysis will be to compare the frequency of parameters in the injury data set to the same parameters in the two supporting data sets. For example, we may find in the injury data set that most injuries occur during "short pass" plays. However, if we were to find the "short pass" play is the most common play type ran in the NFL, this becomes less significant of a finding.

{{< pagebreak >}}


# Results

## Exploratory/Descriptive analysis

_Use a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project._

### Structures of each data set

```{r}
#Structure of Injury Data Set
str(injuries)
```

```{r}
#Structure of Play-by-Play Data
str(pbp)
```

```{r}
#Structure of All Players Data Set
str(players)
```


### Exploratory Analysis of parameters only in the *Injury* Data Set

```{r}
hist(injuries$week.x, breaks=24,main="Injuries by Week in Regular Season", xlim=c(1,18),xlab="Week",labels =T)
```

### Exploratory Analysis of parameters in the *Injury* Data Set and *Play-by-play* Data Set

```{r}
par(mfrow=c(1,2))
hist(injuries$qtr, breaks=6,main="Injuries by Quarter", xlim=c(0,5),xlab="Quarter",labels =T)
hist(pbp$Quarter, breaks=6,main="Total Plays by Quarter", xlim=c(0,5), xlab="Quarter",labels =T)

```

```{r}
par(mfrow=c(1,2))
hist(injuries$down, breaks=6,main="Injuries by Down", xlim=c(0,5),xlab="Quarter",labels =T)
hist(pbp$Down, breaks=6,main="Total Plays by Down", xlim=c(0,5), xlab="Quarter",labels =T)

```

### Exploratory Analysis of parameters in the *Injury* Data Set and *Cumulative Player* Data Set

```{r}
par(mfrow=c(1,2))
hist(injuries$height, breaks=10,main="Injuries by Height", xlab="Heiht",labels =T)
hist(as.numeric(players$height), breaks=10,main="Total Players Height", xlab="Height",labels =T) #Nedd to look into why not all numeric

```

```{r}
par(mfrow=c(1,2))
hist(injuries$weight, breaks=10,main="Injuries by Weight", xlab="Weight",labels =T)
hist(players$weight, breaks=10,main="Total Players Weight", xlab="Weight",labels =T) 

```


@tbl-summarytable shows a summary of the data.

Note the loading of the data providing a **relative** path using the `../../` notation. (Two dots means a folder up). You never want to specify an **absolute** path like `C:\ahandel\myproject\results\` because if you share this with someone, it won't work for them since they don't have that path. You can also use the `here` R package to create paths. See examples of that below. I generally recommend the `here` package.

```{r}
#| label: tbl-summarytable
#| tbl-cap: "Data summary table."
#| echo: FALSE
resulttable=readRDS("../../results/tables/summarytable.rds")
knitr::kable(resulttable)
```



## Basic statistical analysis

_To get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any "p<0.05 means statistical significance" interpretation is not valid._


@fig-result shows a scatterplot figure produced by one of the R scripts.

```{r}
#| label: fig-result
#| fig-cap: "Height and weight stratified by gender."
#| echo: FALSE
knitr::include_graphics(here("results","figures","height-weight-stratified.png"))
```


## Full analysis

_Use one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here._

Example @tbl-resulttable2 shows a summary of a linear model fit.

```{r}
#| label: tbl-resulttable2
#| tbl-cap: "Linear model fit table."
#| echo: FALSE
resulttable2 = readRDS(here("results","tables","resulttable2.rds"))
knitr::kable(resulttable2)
```


{{< pagebreak >}}


# Discussion

## Summary and Interpretation
_Summarize what you did, what you found and what it means._

## Strengths and Limitations
_Discuss what you perceive as strengths and limitations of your analysis._

## Conclusions
_What are the main take-home messages?_

_Include citations in your Rmd file using bibtex, the list of references will automatically be placed at the end_

This paper [@leek2015] discusses types of analyses. 

These papers [@mckay2020; @mckay2020a] are good examples of papers published using a fully reproducible setup similar to the one shown in this template. 

Note that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal [are available](https://www.zotero.org/styles). You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like.


{{< pagebreak >}}

# References



